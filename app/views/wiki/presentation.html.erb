<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>Presentation</title>

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="/plugin_assets/redmine_presentation/stylesheets/reveal.min.css">
		<link rel="stylesheet" href="/plugin_assets/redmine_presentation/stylesheets/theme.css">

		<!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <!--
		<script>
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = 'css/print/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
			}
		</script>
    -->
	</head>
	<body>
    <div class="reveal">
      <div class="slides">
          <%= textilizable @content, :text, :attachments => @content.page.attachments  %>
      </div>
    </div>

		<script src="/plugin_assets/redmine_presentation/javascripts/head.min.js"></script>
		<script src="/plugin_assets/redmine_presentation/javascripts/reveal.min.js"></script>
    
		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: false,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					// { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					// { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					// { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					// { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					// { src: '/plugin_assets/redmine_presentation/javascripts/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					// { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
        
			});

		</script>
    
  </body>
</html>
